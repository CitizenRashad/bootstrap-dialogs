{"name":"Bootstrap-dialogs","tagline":"Twitter Bootstrap Modal Dialogs","body":"Bootstrap Dialogs\r\n=================\r\n\r\n[![Build Status](https://travis-ci.org/myme/bootstrap-dialogs.png?branch=master)](https://travis-ci.org/myme/bootstrap-dialogs)\r\n\r\nDescription\r\n-----------\r\n\r\nAsynchronous modal dialogs for the synchronous `window.alert`, `window.confirm`\r\nand `window.prompt`, styled and managed by [Twitter Bootstrap][bootstrap].\r\nPretty similar to [Bootbox](http://bootboxjs.com/), yet using\r\n[jQuery](http://jquery.com)'s Deferred objects.\r\n\r\n[bootstrap]: http://twitter.github.com/bootstrap\r\n\r\nUsage\r\n-----\r\n\r\n`alert`, `confirm` and `prompt` all support custom title and body. Additionally,\r\nthey support setting the button text and severity (default and danger at the moment).\r\n\r\n```javascript\r\n// Alert dialog with custom title and body\r\nBootstrap.Dialogs.alert({ title: 'Alert title', body: 'Alert body' })\r\n  .done(function () {\r\n    ...\r\n  });\r\n\r\n// Confirm dialog with default text\r\nBootstrap.Dialogs.confirm()\r\n  .done(function () {\r\n    ...\r\n  })\r\n  .fail(function () {\r\n    ...\r\n  });\r\n\r\n// Prompt dialog with custom title and body\r\nBootstrap.Dialogs.prompt({ title: 'What is your name?', body: 'Please enter your name' })\r\n  .done(function (name) {\r\n    ...\r\n  })\r\n  .fail(function () {\r\n    ...\r\n  });\r\n  \r\n// Confirm dialog with custom button text\r\nBootstrap.Dialogs.confirm({ ok: 'Confirm', cancel: 'Abort' });\r\n  \r\n// Critical alert dialog\r\nBootstrap.Dialogs.alert({ danger: true });\r\n```\r\n\r\nDevelopment\r\n-----------\r\n\r\nTL;DR: `npm install && npm test`\r\n\r\nInstall [Node](http://nodejs.org) and [Npm](http://npmjs.org) using your packet\r\nmanager of choice.\r\n\r\nInstall development dependencies:\r\n\r\n    npm install\r\n\r\nBuild and run the tests:\r\n\r\n    npm test\r\n\r\nStart a development cycle listening for changes to files running a simple\r\nstatic server, CoffeeScript linting + compilation, and the test suite:\r\n\r\n    npm start\r\n\r\nExamples\r\n--------\r\n\r\nTo see the examples in action, issue `npm install && npm start` and access\r\n[http://localhost:8000/examples/](http://localhost:8000/examples/).\r\n\r\nUpgrade the distribution files\r\n------------------------------\r\n\r\nIn order to upgrade the distribution files bundled in the repo, run `npm run-script dist`.\r\n\r\nRelease notes\r\n-------------\r\n\r\n### v0.2.4\r\n\r\n * Fix #5: Allow clicking the backdrop to dismiss (unless \"lock\" is true).\r\n * Fix #4: Add \"lock\" option to disable ESC closing.\r\n * Replace `noButtons` with `lock` option.\r\n\r\n### v0.2.3\r\n\r\n * Remove positional arguments support from .dialog.\r\n * Add `noButtons` option to .dialog.\r\n\r\n### v0.2.2\r\n\r\n * Add `return` option to allow confirm dialogs to optionally be\r\n   resolvable by pressing the return key.\r\n\r\n### v0.2.1\r\n\r\n * Fix #3: Allow setting alert, confirm and prompt button texts.\r\n\r\n### v0.2.0\r\n\r\n * Update API's argument passing style to be objects rather\r\n   than regular argument list.\r\n * Fix #2: Add option to make the 'OK' button take on the btn-danger class.\r\n\r\n### v0.1.0\r\n\r\n * Add keyboard bindings for Return and Escape\r\n\r\n### v0.0.3\r\n\r\n * Add grunt-cli as a dependency\r\n * Depend on jQuery 1.8.3 to match Bootstrap\r\n * Allow buttons to be jQuery objects or DOM elements\r\n * Make \"Ok\" buttons primary\r\n\r\n### v0.0.2\r\n\r\n * Add Bootstrap and jQuery as component dependencies.\r\n * Submit prompt on Return keypress.\r\n * Give prompt input focus.\r\n * Wrap titles in h3.\r\n * Add close button by default.\r\n\r\n### v0.0.1\r\n\r\n * Initial release.\r\n\r\nLicense\r\n-------\r\n\r\nDistrubuted under the [ISC][ISC] license.  Please refer to the\r\n[LICENSE](LICENSE-ISC).\r\n\r\n[ISC]: http://en.wikipedia.org/wiki/ISC_license\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}